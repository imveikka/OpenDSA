{
  "translations": {
    "en": {
      "sc1": "Consider searching for the record with key value 32 in this tree. We call the helper method with a Node object to the BST root (the node with key value 37).",
      "sc2": "Check what node is pointing to. It is not None.",
      "sc3": "Check the value at the node. We find that it is greater than what we are looking for.",
      "sc4": "So we want to visit the left child.",
      "sc5": "We make a recursive call with the left child as the new node.",
      "sc7": "Check the value at the node. We find that it is less than what we are looking for.",
      "sc8": "So we want to visit the left child.",
      "sc9": "We make a recursive call with the right child as the new node.",
      "sc11": "Thus, this is the record that we are looking for.",
      "sc12": "Now we will start unwinding the recursion, returning value True back up to the caller.",
      "sc13": "Pop the recursion, now node is back to the node with value 24.",
      "sc14": "Pop the recursion, now node is back to the node with value 37.",
      "sc15": "Pop the recursion one final time to return the value True back to the original caller of findhelp.",
      "sc16": "Check the value at the node. We find that it is not greater or less than what we are looking for."
    }
  },
  "code": {
    "python": [{
      "url": "../../../SourceCode/Python/Binary/BST.py",
      "lineNumbers": false,
      "startAfter": "#/* *** ODSATag: find *** */",
      "endBefore": "#/* *** ODSAendTag: find *** */",
      "tags": {
        "sig": [2, 5],
        "checknull": 6,
        "checkgreater": 8,
        "visitleft": 9,
        "checkequal": 5,
        "found": [12, 13],
        "checksmaller": 10,
        "visitright": 11,
        "end": 8
      }
    }],
    "java_generic": [{
      "url": "../../../SourceCode/Java_Generic/Binary/BST.java",
      "lineNumbers": false,
      "startAfter": "/* *** ODSATag: findhelp *** */",
      "endBefore": "/* *** ODSAendTag: findhelp *** */",
      "tags": {
        "sig": 1,
        "checknull": 2,
        "checkgreater": 3,
        "visitleft": 4,
        "checkequal": 5,
        "found": 6,
        "visitright": 7,
        "end": 8
      }
    }]
  }
}
